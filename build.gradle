/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'huzhifeng' at '10/21/16 11:02 AM' with Gradle 3.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'code.Main'
// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    flatDir {
        dirs 'lib'
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile files("libs/ansj_lucene4_plug.jar")
    compile files("libs/ansj_seg-1.4.jar")
    compile files("libs/lpsolve55j.jar")
    compile files("libs/nlp-lang-1.0.2.jar")
    compile files("libs/stanford-ner.jar")
    //compile files("libs/stopword_Eng")
    compile files("libs/tree_split-1.4.jar")
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes("Main-Class":"code.Main")
    }
}
